[{"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\index.js":"1","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\App.js":"2","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\serviceWorker.js":"3","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\editSensor.js":"4","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\sensorsList.js":"5","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\view.js":"6","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\navigation.js":"7","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\protectedRoute.js":"8","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\auth\\login.js":"9","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\auth\\myAccount.js":"10"},{"size":659,"mtime":1616497102679,"results":"11","hashOfConfig":"12"},{"size":1738,"mtime":1616497102661,"results":"13","hashOfConfig":"12"},{"size":5086,"mtime":1616497102682,"results":"14","hashOfConfig":"12"},{"size":4418,"mtime":1616497102671,"results":"15","hashOfConfig":"12"},{"size":3484,"mtime":1616514504746,"results":"16","hashOfConfig":"12"},{"size":3153,"mtime":1616497102677,"results":"17","hashOfConfig":"12"},{"size":1262,"mtime":1616497102672,"results":"18","hashOfConfig":"12"},{"size":556,"mtime":1616497102673,"results":"19","hashOfConfig":"12"},{"size":2998,"mtime":1616578236157,"results":"20","hashOfConfig":"12"},{"size":1216,"mtime":1616497102667,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hx6uqw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\index.js",[],["48","49"],"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\App.js",["50","51","52"],"import React from \"react\";\r\nimport {withCookies} from 'react-cookie';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n// import AddSensor from \"./components/addSensor\";\r\nimport EditSensor from \"./components/editSensor\";\r\nimport SensorsList from \"./components/sensorsList\";\r\nimport View from \"./components/view\";\r\nimport Login from \"./auth/login\";\r\nimport Navigation from './components/navigation';\r\nimport ProtectedRoute from './components/protectedRoute'\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const userLoggedIn = props.allCookies.userLoggedIn;\r\n  return (<Router>\r\n    <div className=\"App\">\r\n      <Navigation userLoggedIn={userLoggedIn}/>\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"wrapper\">\r\n              <Switch>\r\n                <Route exact path='/' component={View} />\r\n                <Route exact path=\"/edit-sensor/:id\" component={EditSensor} />\r\n                <Route exact path=\"/sensors-list\"  render={() => (<SensorsList userLoggedIn={props.allCookies.userLoggedIn}/>)} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                {/* <Route exact path=\"/login\"\r\n                 component={() => <Login onLoginSuccess={handleLogin} />} /> */}\r\n                {/* <Route exact path=\"/add-sensor\" component={AddSensor} /> */}\r\n              </Switch>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  </Router>);\r\n}\r\n\r\nexport default withCookies(App);\r\n","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\serviceWorker.js",[],"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\editSensor.js",["53"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport axios from 'axios';\r\n\r\nexport default class EditSensor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n\r\n    this.onChangeSensorName = this.onChangeSensorName.bind(this);\r\n    this.onChangeSensorType = this.onChangeSensorType.bind(this);\r\n    this.onChangeSensorSnowDepthLimit = this.onChangeSensorSnowDepthLimit.bind(this);\r\n    this.onChangeSensorBaseValue = this.onChangeSensorBaseValue.bind(this)\r\n    this.onChangeSensorComment = this.onChangeSensorComment.bind(this)\r\n    this.onChangeSensorAdminStatus = this.onChangeSensorAdminStatus.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // State\r\n    this.state = {\r\n      // id: '',\r\n      name: '',\r\n      type: '',\r\n      snowDepthLimit: '',\r\n      baseValue: '',\r\n      comment: '',\r\n      adminStatus: '',\r\n      message: '',\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props)\r\n    axios.get(`${process.env.REACT_APP_API_URL}/sensors/` + this.props.match.params.id)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        this.setState({\r\n          // id: res.data.id, \r\n          name: res.data.name,\r\n          type: res.data.type,\r\n          snowDepthLimit: res.data.snowDepthLimit,\r\n          baseValue: res.data.baseValue,\r\n          comment: res.data.comment,\r\n          adminStatus: res.data.adminStatus\r\n        });\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  onChangeSensorName(e) {\r\n    this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeSensorType(e) {\r\n    this.setState({ type: e.target.value })\r\n  }\r\n\r\n  onChangeSensorSnowDepthLimit(e) {\r\n    this.setState({ snowDepthLimit: e.target.value })\r\n  }\r\n\r\n  onChangeSensorBaseValue(e) {\r\n    this.setState({ baseValue: e.target.value })\r\n  }\r\n\r\n  onChangeSensorComment(e) {\r\n    this.setState({ comment: e.target.value })\r\n  }\r\n\r\n  onChangeSensorAdminStatus(e) {\r\n    this.setState({ adminStatus: e.target.value })\r\n  }\r\n\r\n  onSubmit(e) {\r\n\r\n    try {\r\n      const sensorObject = {\r\n        // id: this.state.id,\r\n        name: this.state.name,\r\n        type: this.state.type,\r\n        snowDepthLimit: this.state.snowDepthLimit,\r\n        baseValue: this.state.baseValue,\r\n        comment: this.state.comment,\r\n        adminStatus: this.state.adminStatus\r\n      };\r\n\r\n      const item = {\r\n        id: this.state.id,\r\n        name: this.state.name,\r\n        snowDepth: 0,\r\n        time:0\r\n      };\r\n\r\n      this.setState({\r\n        message: 'Sensor Successfully Updated',\r\n        loading: true\r\n      })\r\n\r\n      axios.put('/sensors/' + this.props.match.params.id, sensorObject)\r\n        .then((res) => {\r\n          console.log(res)\r\n          console.log('Sensor successfully updated')\r\n          this.props.history.push('/sensors-list')\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n\r\n        // axios.post('/view/sendEmail/' + this.props.match.params.id, item)\r\n        // .then((res) => {\r\n        //   console.log(res)\r\n        //   console.log('Send email')\r\n        // }).catch((error) => {\r\n        //   console.log(error)\r\n        // })\r\n\r\n      // Redirect to Sensor List\r\n      e.preventDefault()\r\n    } catch {\r\n      this.setState({ message: 'Error: Sensor is not Updated' })\r\n    }\r\n    this.setState({ loading: false })\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"form-wrapper\">\r\n       <h2 className='text-center mb-4'>Update Sensor</h2>\r\n      {this.state.message && <Alert variant='danger'>{this.state.message}</Alert>}\r\n      <Form onSubmit={this.onSubmit}>\r\n      \r\n\r\n        <Form.Group controlId=\"Comment\">\r\n          <Form.Label>Comment</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.comment} onChange={this.onChangeSensorComment} required />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"AdminStatus\">\r\n          <Form.Label>Status</Form.Label>\r\n          <Form.Control as=\"select\" value={this.state.adminStatus} onChange={this.onChangeSensorAdminStatus}>\r\n          <option></option>\r\n          <option>Öppen</option>\r\n          <option>Stängd</option>\r\n            </Form.Control> \r\n        </Form.Group>\r\n\r\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Update Sensor\r\n        </Button>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}\r\n","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\sensorsList.js",[],"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\view.js",["54"],"import React, { Component } from \"react\";\r\n// import {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\n// import Table from 'react-bootstrap/Table';\r\n// import sensorTableRow from './sensorTableRow';\r\n\r\n\r\nclass View extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      view: []\r\n    };\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    fetch(`${process.env.REACT_APP_API_URL}/view`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (data) => {\r\n            console.log(data)\r\n          this.setState({\r\n            isLoaded: true,\r\n            view: data,\r\n            \r\n          });\r\n        },\r\n        \r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   fetch(\"/view\")\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (data) => {\r\n  //           console.log(data)\r\n            \r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           view: data,\r\n            \r\n  //         });\r\n  //       },\r\n        \r\n  //       (error) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           error\r\n  //         });\r\n  //       }\r\n  //     )\r\n  // }\r\n\r\n \r\n\r\n  render() {\r\n    const { error, isLoaded, view } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n      <>\r\n        <h2>Senors Summary</h2> \r\n        <div style={{overflowX:\"auto\"}}> \r\n        {view.length > 0 &&\r\n        <table id='sensorsList' className=\"table table-striped table-borderless\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              \r\n            <th>Status</th>\r\n            <th>Idrottsplats</th>\r\n            <th>Plan</th>\r\n            <th>Snödjup</th>\r\n            <th>Kommentar</th>\r\n            <th>Temperatur</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {view.map(item => (\r\n                  <tr key={item.Id}>\r\n                     {(item.Status !== 'Öppen' && item.Status !== 'Stängd'  && item.Status !== 'Varning' )\r\n                      &&\r\n                      <td className = 'opened'>{\"Unknown\"}</td>}\r\n                      {item.Status === 'Öppen' &&\r\n                      <td className = 'opened'>{item.Status}</td>}\r\n                       {item.Status === 'Varning' &&\r\n                      <td className = 'warning'>{item.Status}</td>}\r\n                       {item.Status === 'Stängd' &&\r\n                      <td className = 'closed'>{item.Status}</td>}\r\n                    <td>{item.Name}</td>\r\n              <td>{item.Type}</td>\r\n              <td>{item.SnowDepth+\"mm\"}</td>\r\n              <td>{item.Comment}</td>\r\n              <td>{item.Temperature}</td>\r\n              \r\n              \r\n                  </tr>\r\n                ))}\r\n          \r\n          </tbody>\r\n        </table>\r\n    }\r\n        </div>\r\n        \r\n       </>\r\n       \r\n      );\r\n    }\r\n  }\r\n}\r\n \r\n\r\n\r\nexport default View;\r\n","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\navigation.js",[],"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\components\\protectedRoute.js",["55","56"],"import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction privateRoute({ component: Component, ...rest }) {\r\n\r\n  let isLogin = true\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLogin ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default privateRoute","C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\auth\\login.js",["57"],"C:\\Users\\musals003\\Desktop\\snow-depth\\client\\src\\auth\\myAccount.js",["58"],"import React, {useEffect, useState} from \"react\";\r\nimport {useCookies, withCookies} from 'react-cookie';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction MyAccount(props) {\r\n  const [cookies, setCookie] = useCookies(['userLoggedIn']);\r\n  const [loggedIn, setLoggedIn] = useState(props?.userLoggedIn);\r\n  useEffect(() => {\r\n      setLoggedIn(props?.userLoggedIn)\r\n  }, [props?.userLoggedIn]) // T\r\n\r\n  const handleLogOut = async() => {\r\n    await  axios.get(`${process.env.REACT_APP_API_URL}/users/logout`, '')\r\n      .then(response => {\r\n        setCookie('userLoggedIn', false);\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n        setCookie('userLoggedIn', false);\r\n      });\r\n  }\r\n  return (<div>\r\n                {loggedIn === 'true' ?\r\n                  (<Link to={\"/\"} className=\"nav-link\" onClick={handleLogOut}>\r\n                    LogOut\r\n                  </Link>)\r\n                  :\r\n                  (<Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>)\r\n                }\r\n                  </div>\r\n      );\r\n}\r\n\r\nexport default withCookies(MyAccount);\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":9,"column":50,"nodeType":"65","messageId":"66","endLine":9,"endColumn":54},{"ruleId":"63","severity":1,"message":"67","line":17,"column":8,"nodeType":"65","messageId":"66","endLine":17,"endColumn":22},{"ruleId":"63","severity":1,"message":"68","line":18,"column":8,"nodeType":"65","messageId":"66","endLine":18,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":91,"column":13,"nodeType":"65","messageId":"66","endLine":91,"endColumn":17},{"ruleId":"63","severity":1,"message":"68","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"70","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":2,"column":35,"nodeType":"65","messageId":"66","endLine":2,"endColumn":41},{"ruleId":"63","severity":1,"message":"72","line":9,"column":11,"nodeType":"65","messageId":"66","endLine":9,"endColumn":18},{"ruleId":"63","severity":1,"message":"72","line":10,"column":10,"nodeType":"65","messageId":"66","endLine":10,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ProtectedRoute' is defined but never used.","'axios' is defined but never used.","'item' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'cookies' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]